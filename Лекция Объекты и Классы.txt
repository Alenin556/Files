Лекция - Объекты и классы

Объект это функция(метод, или группа методов) созданая и описанная внутри класса.
Класс это часть проргаммы в которой описаная определенная логика.


Для того чтобы создать объект , надо создать его класс.

Класс будет играть роль описания нового типа данных , в Java любой объект принадлежит к какому то типу данных.

CalcService service

Мы создали переменную с ее именем service (имя мы задаем сами) , в которой находяться объекты (хранящиеся в классе CalcService),
при помощи знака  ( . ) например service.max (если был бы объект с названием max) мы можем обращатсья к объектам которые созданы в классе CalcService .
И мы создали этот объект при помощи (new - приказ Java создать новые значение ссылочного типа данных),
затем мы ввели название типа или класса которого мы хотим создать new CalcService(); .
В конце строки указываются круглые скобки.
(Если мы настроили тип данных без параметров в скобках ничего не пишеться , если мы создали объект с возможностью
указывать параметры в скобках указываются определенные значения.)

Итог : CalcService service = new CalcService();


Внутри класса CalcService будет подробно описано как будут работать обьекты этого типа данных(тип данных CalcService), что они должны уметь и как они должны работать.

public - указываем тогда когда хотим описать действие
int - действие возвращает целое число 
void - действие ничего не возвращает 
max - название действия ( оно может быть любое, главное чтобы оно было схоже по логике с функцией которую выполняет) 

Итог : public int max ( int a , int b)

( int a , int b) - в скобках указаны !параметры! с которыми будет работать система.Это ячейки которые принимают
входные данные у функций.

После указания параметров ставятся фигурные скобки в которых будет содержаться весь код этой функции.

Итог : public int max ( int a , int b){

наш код

}

Во время того как мы будем писать код мы будем ссылаться на те параметры которые мы указали и как будто в них уже что то положили за нас .
Учитывая то что в наши параметры что то положили , мы должны писать код так что функция будет работать при любых a и b .

Объект должен отдавать результат при завершении работы , для этого используется функция return !
При том что если у нас начало действия начинается с public (public указывается с учетом того что мы должны отдать что то в результате вызова этого действия в отличии от void) !.
Используя return возвращая что то мы должны указать тот же тип данных который мы указали в начале функции ( это int - целые значения).

Для обращения к функции мы пишем название объекта service , затем через точку мы пишем название функции которая нам необходима 

Итог : service.max 

Мы вызвали функцию которая лежала внутри объекта.
Затем нам необходимо указать те параметры которые мы указали в круглых скобках. 