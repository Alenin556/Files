Массивы чаще всего используются для того чтобы хранить большой набор данных , которые надо проанализировать однотипным образом.

Массив хранит ячейки исключительно одного типа данных 
если масив типа int[] то хранить он будет только целочисленные значения
если массив типа String[] соответсвенно хранить он будет только строки

Для сроздания массив используется команда с указанием типа данных , его наименованием и указанием количества свободных ячеек для этого массива

int [] arr = new int[5]
int[] - тип данных
arr - наименование
new int[5] - создание новых ячеек для массива из 5 штук

Так же при создании массива мы можем указать в него значения которые нам уже известны
int [] arr={
11, 22, 33, 12
};
*(в конце точка с запятой.)
*внутри фигурных скобок мы указываем те значения которые нам уже известны, через запятую.


Для отображения всех значений массива используется
sout- System.out.println()
soutArrays.toSring(arr)
Для отображения определенной ячеейки необходимо ее указать
sout(arr[3]). 

Для изменения значений массива ,необходима указать название переменной массива и указать какая позиция в массиве на что меняется.
arr[3] = 11;

*Все ячейки ссылочного типа  данных хранят адресса*
если адресс отсутствует то он равен null то есть адресс отсутствует.

Цикл for each (*для каждого)
Когда нам важны значения массива и мы хотим пройти их всех необходимо создать переменную того же типа что и массив,
для того чтобы при выполнение цикла в переменную присваивалось значение массива
for (int t : temp)
int t - переменная куда сохраняется значения массива temp ,после выполнения цикла , значение будет следующее относительно того что лежит в массиве
для значения что лежит в переменной будет выполняться тело цикла , например его сохранение или удаление.



